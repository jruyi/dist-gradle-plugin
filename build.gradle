/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id 'com.gradle.plugin-publish' version '0.9.6'
}

apply plugin: 'groovy'
apply plugin: 'maven-publish'

group = 'org.jruyi.gradle'
archivesBaseName = 'dist-gradle-plugin'
version = '2.5.1'
description = 'A gradle plugin for creating distribution archives of JRuyi based applications'

ext {
	title = 'Gradle JRuyi Dist Plugin'
	organizationId = 'org.jruyi'
	organizationName = 'JRuyi.org'
	organizationUrl = 'http://www.jruyi.org/'

	websiteUrl = 'https://github.com/jruyi/dist-gradle-plugin'
	issueTrackerUrl = 'https://github.com/jruyi/dist-gradle-plugin/issues'
	vcsUrl = 'https://github.com/jruyi/dist-gradle-plugin.git'

	licenseName = 'Apache License, Version 2.0'
	licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'

	createdBy = "${System.getProperty('java.version')} (${System.getProperty('java.vm.vendor')})"
}

configurations.all {
	transitive = false
}

dependencies {
	compile gradleApi()
	compile localGroovy()
}

processResources {
	from(['LICENSE', 'NOTICE']) {
		into 'META-INF'
	}
}

compileGroovy {
	sourceCompatibility = 1.6
	targetCompatibility = 1.6
	options.encoding = 'UTF-8'
}

jar {
	manifest {
		attributes(
				'Specification-Title': title,
				'Specification-Version': version,
				'Specification-Vendor': organizationName,
				'Implementation-Title': title,
				'Implementation-Version': version,
				'Implementation-Vendor': organizationName,
				'Implementation-Vendor-Id': organizationId,
				'Implementation-Vendor-URL': organizationUrl,
				'Created-By': createdBy,
		)
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {

			artifactId archivesBaseName

			from components.java

			pom.withXml {
				def node = asNode()
				node.children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST
					name title
					description description
					url websiteUrl
					inceptionYear '2015'
					scm {
						url websiteUrl
						connection "scm:$vcsUrl"
						developerConnection "scm:$vcsUrl"
					}
					licenses {
						license {
							name licenseName
							url licenseUrl
							distribution 'repo'
						}
					}
					developers {
						developer {
							id 'agemocui'
							name 'Agemo Cui'
							email 'agemocui@jruyi.org'
						}
					}
				}
			}
		}
	}
}

pluginBundle {
	website = "$websiteUrl"
	vcsUrl = "$vcsUrl"
	description = "${project.description}"
	tags = ['jruyi', 'dist', 'distribution']

	plugins {
		distPlugin {
			id = 'org.jruyi.dist'
			displayName = title
		}
	}
}
